//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSWindowController.h"

#import "AccountServiceExt.h"
#import "MMPreviewDraggableWindowDelegate.h"
#import "MMPreviewToolbarWindowControllerDelegate.h"
#import "NSPageControllerDelegate.h"
#import "NSSharingServiceDelegate.h"
#import "NSWindowDelegate.h"

@class MMPreviewDraggableWindow, MMPreviewPageController, MMPreviewToolbarWindowController, MMPreviewViewController, MMTimer, MMView, NSArray, NSButton, NSImageView, NSString, NSTextField, NSTrackingArea, NSView;

@interface MMPreviewWindowController : NSWindowController <AccountServiceExt, NSWindowDelegate, NSSharingServiceDelegate, MMPreviewToolbarWindowControllerDelegate, MMPreviewDraggableWindowDelegate, NSPageControllerDelegate>
{
    BOOL _isUpdatingItemList;
    BOOL _isFullScreen;
    BOOL _useKeyNavigation;
    BOOL _useButtonNavigation;
    BOOL _useSwipeNavigation;
    BOOL _isKeyWindow;
    BOOL _isMouseDragging;
    BOOL _isAnimating;
    BOOL _isToolbarInWindow;
    BOOL _isClosing;
    MMView *_containerView;
    NSView *_titlebarContainer;
    MMPreviewPageController *_pageController;
    MMPreviewViewController *_previewViewController;
    MMPreviewToolbarWindowController *_toolbarWindowController;
    NSArray *_previewItemList;
    unsigned long long _previewType;
    MMTimer *_loadingTimer;
    NSView *_failedImageViewContainer;
    NSImageView *_failedImageView;
    NSTextField *_errMsgLabel;
    MMTimer *_toolbarTimer;
    MMTimer *_trafficlightsTimer;
    id _userActiveEvent;
    id _userCloseEvent;
    NSTrackingArea *_trackingArea;
    NSButton *_closeButton;
    NSButton *_minButton;
    NSButton *_maxButton;
    NSView *_titlebarBgView;
    struct CGPoint _eventPoint;
}

@property(nonatomic) BOOL isClosing; // @synthesize isClosing=_isClosing;
@property(nonatomic) BOOL isToolbarInWindow; // @synthesize isToolbarInWindow=_isToolbarInWindow;
@property(retain, nonatomic) NSView *titlebarBgView; // @synthesize titlebarBgView=_titlebarBgView;
@property(retain, nonatomic) NSButton *maxButton; // @synthesize maxButton=_maxButton;
@property(retain, nonatomic) NSButton *minButton; // @synthesize minButton=_minButton;
@property(retain, nonatomic) NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) BOOL isAnimating; // @synthesize isAnimating=_isAnimating;
@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
@property(nonatomic) struct CGPoint eventPoint; // @synthesize eventPoint=_eventPoint;
@property(nonatomic) BOOL isMouseDragging; // @synthesize isMouseDragging=_isMouseDragging;
@property(nonatomic) BOOL isKeyWindow; // @synthesize isKeyWindow=_isKeyWindow;
@property(retain, nonatomic) id userCloseEvent; // @synthesize userCloseEvent=_userCloseEvent;
@property(retain, nonatomic) id userActiveEvent; // @synthesize userActiveEvent=_userActiveEvent;
@property(retain, nonatomic) MMTimer *trafficlightsTimer; // @synthesize trafficlightsTimer=_trafficlightsTimer;
@property(retain, nonatomic) MMTimer *toolbarTimer; // @synthesize toolbarTimer=_toolbarTimer;
@property __weak NSTextField *errMsgLabel; // @synthesize errMsgLabel=_errMsgLabel;
@property __weak NSImageView *failedImageView; // @synthesize failedImageView=_failedImageView;
@property __weak NSView *failedImageViewContainer; // @synthesize failedImageViewContainer=_failedImageViewContainer;
@property(retain, nonatomic) MMTimer *loadingTimer; // @synthesize loadingTimer=_loadingTimer;
@property(nonatomic) BOOL useSwipeNavigation; // @synthesize useSwipeNavigation=_useSwipeNavigation;
@property(nonatomic) BOOL useButtonNavigation; // @synthesize useButtonNavigation=_useButtonNavigation;
@property(nonatomic) BOOL useKeyNavigation; // @synthesize useKeyNavigation=_useKeyNavigation;
@property(nonatomic) BOOL isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property(nonatomic) BOOL isUpdatingItemList; // @synthesize isUpdatingItemList=_isUpdatingItemList;
@property(nonatomic) unsigned long long previewType; // @synthesize previewType=_previewType;
@property(retain, nonatomic) NSArray *previewItemList; // @synthesize previewItemList=_previewItemList;
@property(retain, nonatomic) MMPreviewToolbarWindowController *toolbarWindowController; // @synthesize toolbarWindowController=_toolbarWindowController;
@property(retain, nonatomic) MMPreviewViewController *previewViewController; // @synthesize previewViewController=_previewViewController;
@property(retain, nonatomic) MMPreviewPageController *pageController; // @synthesize pageController=_pageController;
@property(retain, nonatomic) NSView *titlebarContainer; // @synthesize titlebarContainer=_titlebarContainer;
@property(retain, nonatomic) MMView *containerView; // @synthesize containerView=_containerView;
- (void).cxx_destruct;
- (void)_updateToolbarOrigion;
- (void)updateToolbarNavigations;
- (void)updateToolbarControls;
- (void)onUserLogout;
- (void)onCurrentNetworkLockStateWillChange:(BOOL)arg1;
- (void)onCurrentDeviceLockStateChanged:(BOOL)arg1;
- (id)contentForShare;
- (void)_sharingServiceAction:(id)arg1;
- (void)_menuActionExport:(id)arg1;
- (void)_menuActionFavorite:(id)arg1;
- (void)forwardPreviewItem:(id)arg1 toContactsWithUserNames:(id)arg2;
- (void)sendPreviewItem:(id)arg1 toContactsWithUserNames:(id)arg2;
- (void)_menuActionForward:(id)arg1;
- (void)_menuActionCopy;
- (void)_menuActionOpenWith;
- (void)rightMouseMenuActionExport;
- (void)rightMouseMenuActionFavorite;
- (void)rightMouseMenuActionForward;
- (void)rightMouseMenuActionCopy;
- (void)rightMouseMenuActionOpenWith;
- (id)_makeContextMenu;
- (void)_setupContextualMenu;
- (void)_updateToolbarButtonWithFullScreen:(BOOL)arg1;
- (void)_showToolbarInFullScreen:(BOOL)arg1;
- (void)_hideToolbar;
- (void)_resetToolbarTimer;
- (void)_startToolbarTimer;
- (void)_remainToolbarActive;
- (void)_removeToolbarEventHandler;
- (void)_setupToolbarEventHandler;
- (void)_toggleFullScreenWithSender:(id)arg1;
- (void)makeSmaller:(id)arg1;
- (void)makeLarger:(id)arg1;
- (void)makeStandardSize:(id)arg1;
- (id)currentContentForShare;
- (id)currentPreviewItem;
- (void)menuActionExport;
- (void)menuActionFavorite;
- (void)menuActionForward;
- (void)menuActionCopy;
- (void)menuActionOpenWith;
- (void)menuMore;
- (void)closePreview;
- (void)fullScreen;
- (void)rotate;
- (void)zoomIn;
- (void)zoomOut;
- (void)nextItem;
- (void)prevItem;
- (void)showTextToastWithText:(id)arg1;
- (void)toggleLoadingView;
- (void)showLoadingViewTimeOut;
- (void)showLoadingView;
- (void)hideLoadingViewWithItemOK:(BOOL)arg1;
- (void)hideLoadingView;
- (void)_basicRefreshOnNavigation:(id)arg1;
- (void)refreshOnSwipeNavigation:(id)arg1;
- (void)refreshOnKeyOrButtonNavigationWithItem:(id)arg1;
- (struct CGRect)_windowFrameWithImageSize:(struct CGSize)arg1 withBottomFixed:(BOOL)arg2;
- (struct CGRect)getWindowFrameOnLoadedWithImageSize:(struct CGSize)arg1;
- (struct CGRect)initialWindowFrameWithImageSize:(struct CGSize)arg1 sourceFrame:(struct CGRect)arg2;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_setupTrackingArea;
- (void)setupTitleBarContainer;
- (void)closeWithMenu;
- (void)_nextItemWithKeyDown:(BOOL)arg1;
- (void)_prevItemWithKeyDown:(BOOL)arg1;
- (void)_closeWithBtn:(id)arg1;
- (void)_closeWindowAnimated:(BOOL)arg1;
- (void)close;
- (void)show;
- (void)setupPreviewController:(id)arg1;
- (void)showTextToastWithHead:(BOOL)arg1;
- (void)setupTitle;
- (void)openWith;
- (id)getCurrentPreviewItem;
- (void)setupPageController;
- (void)_setupFailedImageView;
- (void)_setupLoadingView;
- (void)_setupUserActiveEventHandler;
- (void)_setupKeyDownHandler;
- (BOOL)_dragFarEnough:(struct CGPoint)arg1 from:(struct CGPoint)arg2;
- (void)_removeMouseEventHandler;
- (void)_setupMouseEventHandler;
- (void)_commonSetup;
- (void)windowWillClose:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (void)windowDidLoad;
- (void)dealloc;
- (id)initWithWindowNibName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain) MMPreviewDraggableWindow *window; // @dynamic window;

@end

