//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PBGeneratedMessage.h"

@class BaseResponse, NSString, SKBuiltinBuffer_t;

@interface ShakeMusicResponse : PBGeneratedMessage
{
    unsigned int hasBaseResponse:1;
    unsigned int hasEndFlag:1;
    unsigned int hasMusicId:1;
    unsigned int hasOffset:1;
    unsigned int hasSongName:1;
    unsigned int hasSongSinger:1;
    unsigned int hasSongAlbum:1;
    unsigned int hasSongAlbumUrl:1;
    unsigned int hasSongWifiUrl:1;
    unsigned int hasSongWapLinkUrl:1;
    unsigned int hasSongWebUrl:1;
    unsigned int hasSongLyric:1;
    unsigned int hasResultType:1;
    unsigned int hasTvtype:1;
    unsigned int hasTvdescriptionXml:1;
    unsigned int endFlag;
    unsigned int musicId;
    float offset;
    unsigned int resultType;
    unsigned int tvtype;
    BaseResponse *baseResponse;
    SKBuiltinBuffer_t *songName;
    SKBuiltinBuffer_t *songSinger;
    SKBuiltinBuffer_t *songAlbum;
    SKBuiltinBuffer_t *songAlbumUrl;
    SKBuiltinBuffer_t *songWifiUrl;
    SKBuiltinBuffer_t *songWapLinkUrl;
    SKBuiltinBuffer_t *songWebUrl;
    SKBuiltinBuffer_t *songLyric;
    NSString *tvdescriptionXml;
}

+ (id)parseFromData:(id)arg1;
@property(retain, nonatomic, setter=SetTvdescriptionXml:) NSString *tvdescriptionXml; // @synthesize tvdescriptionXml;
@property(readonly, nonatomic) BOOL hasTvdescriptionXml; // @synthesize hasTvdescriptionXml;
@property(nonatomic, setter=SetTvtype:) unsigned int tvtype; // @synthesize tvtype;
@property(readonly, nonatomic) BOOL hasTvtype; // @synthesize hasTvtype;
@property(nonatomic, setter=SetResultType:) unsigned int resultType; // @synthesize resultType;
@property(readonly, nonatomic) BOOL hasResultType; // @synthesize hasResultType;
@property(retain, nonatomic, setter=SetSongLyric:) SKBuiltinBuffer_t *songLyric; // @synthesize songLyric;
@property(readonly, nonatomic) BOOL hasSongLyric; // @synthesize hasSongLyric;
@property(retain, nonatomic, setter=SetSongWebUrl:) SKBuiltinBuffer_t *songWebUrl; // @synthesize songWebUrl;
@property(readonly, nonatomic) BOOL hasSongWebUrl; // @synthesize hasSongWebUrl;
@property(retain, nonatomic, setter=SetSongWapLinkUrl:) SKBuiltinBuffer_t *songWapLinkUrl; // @synthesize songWapLinkUrl;
@property(readonly, nonatomic) BOOL hasSongWapLinkUrl; // @synthesize hasSongWapLinkUrl;
@property(retain, nonatomic, setter=SetSongWifiUrl:) SKBuiltinBuffer_t *songWifiUrl; // @synthesize songWifiUrl;
@property(readonly, nonatomic) BOOL hasSongWifiUrl; // @synthesize hasSongWifiUrl;
@property(retain, nonatomic, setter=SetSongAlbumUrl:) SKBuiltinBuffer_t *songAlbumUrl; // @synthesize songAlbumUrl;
@property(readonly, nonatomic) BOOL hasSongAlbumUrl; // @synthesize hasSongAlbumUrl;
@property(retain, nonatomic, setter=SetSongAlbum:) SKBuiltinBuffer_t *songAlbum; // @synthesize songAlbum;
@property(readonly, nonatomic) BOOL hasSongAlbum; // @synthesize hasSongAlbum;
@property(retain, nonatomic, setter=SetSongSinger:) SKBuiltinBuffer_t *songSinger; // @synthesize songSinger;
@property(readonly, nonatomic) BOOL hasSongSinger; // @synthesize hasSongSinger;
@property(retain, nonatomic, setter=SetSongName:) SKBuiltinBuffer_t *songName; // @synthesize songName;
@property(readonly, nonatomic) BOOL hasSongName; // @synthesize hasSongName;
@property(nonatomic, setter=SetOffset:) float offset; // @synthesize offset;
@property(readonly, nonatomic) BOOL hasOffset; // @synthesize hasOffset;
@property(nonatomic, setter=SetMusicId:) unsigned int musicId; // @synthesize musicId;
@property(readonly, nonatomic) BOOL hasMusicId; // @synthesize hasMusicId;
@property(nonatomic, setter=SetEndFlag:) unsigned int endFlag; // @synthesize endFlag;
@property(readonly, nonatomic) BOOL hasEndFlag; // @synthesize hasEndFlag;
@property(retain, nonatomic, setter=SetBaseResponse:) BaseResponse *baseResponse; // @synthesize baseResponse;
@property(readonly, nonatomic) BOOL hasBaseResponse; // @synthesize hasBaseResponse;
- (void).cxx_destruct;
- (id)mergeFromCodedInputStream:(id)arg1;
- (int)serializedSize;
- (void)writeToCodedOutputStream:(id)arg1;
- (BOOL)isInitialized;
- (id)init;

@end

