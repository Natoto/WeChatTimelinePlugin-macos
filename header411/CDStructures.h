//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class NSMutableArray;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AndroidReport_t {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct AudioDecoder {
    void *_field1;
    void *_field2;
    int _field3;
    char *_field4;
    int _field5;
    int _field6;
    int _field7;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AutoBuffer {
    char *_field1;
    long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct C2CDownloadRequest {
    basic_string_805fe43b filekey;
    void *user_context;
    basic_string_805fe43b arg_info;
    int queue_timeout_seconds;
    int transfor_timeout_seconds;
    int filetype;
    unsigned long long file_size;
    basic_string_805fe43b savepath;
    basic_string_805fe43b aeskey;
    basic_string_805fe43b fileid;
    basic_string_805fe43b filemd5;
    int limit_rate;
    basic_string_805fe43b bigfile_signture;
    basic_string_805fe43b msg_extra;
    basic_string_805fe43b videofileid;
    _Bool isstoragemode;
    _Bool issmallvideo;
    _Bool islargesvideo;
    _Bool isautostart;
    _Bool isencrypted;
    _Bool is_silent_task;
    int request_video_format;
    int chattype;
    int initial_download_offset;
    int initial_download_length;
    int predownload_ratio;
    _Bool is_cold_snsdata;
    basic_string_805fe43b fakeBigfileSignature;
    basic_string_805fe43b fakeBigfileSignatureAeskey;
    basic_string_805fe43b url;
    basic_string_805fe43b host;
    basic_string_805fe43b referer;
    basic_string_805fe43b signal_quality;
    basic_string_805fe43b sns_scene;
    unsigned long long sns_decrypt_key;
    _Bool is_sns_image_thumb;
    unsigned int sns_thumbimg_concurrent_count;
    unsigned int sns_bigimage_concurrent_count;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> iplist;
    int iplist_source;
    basic_string_805fe43b http_request_header;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> verify_headers;
    basic_string_805fe43b bakup_url;
    _Bool allow_mobile_net_download;
    _Bool is_resume_task;
    unsigned int bigfile_connection_count;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CMVQQEngine;

struct CSpeedTestChannel;

struct CTransportChannel;

struct CdnCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct CodedInputData {
    id _field1;
    char *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
};

struct CodedOutputData {
    char *_field1;
    unsigned long long _field2;
    int _field3;
};

struct ComponentInstanceRecord {
    long long _field1[1];
};

struct Config {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    _Bool _field15;
    _Bool _field16;
};

struct DialReport_t {
    unsigned long long llUin;
    unsigned long long llRoomKey;
    unsigned int iRoomId;
    unsigned int iRoomMemberId;
    unsigned int iStopStatus;
    int iReqRet;
    int iReserve;
    int iUsedTime;
    unsigned char isCanConnect;
    unsigned char isGotPeerId;
    unsigned char isGotStrategy;
    unsigned char isConnected;
    unsigned char isCanTalk;
    unsigned char isGotCapInfo;
    unsigned char isTalked;
    unsigned int iDoubleLinkSwitchReqCnt;
    unsigned int iDoubleLinkSwitchSucToDirectCnt;
    unsigned int iDoubleLinkSwitchSucToRelayCnt;
    unsigned int iEncryptStrategy;
    unsigned int iQosStrategy;
    unsigned int iQualityRedirectReqCnt;
    unsigned int iQualityDoRedirectCnt;
    unsigned int iTcpSwitchThreshold;
};

struct ExtReport_t {
    char _field1[256];
    char _field2[256];
    char _field3[256];
    char _field4[256];
    int _field5;
    int _field6;
    unsigned int _field7;
    unsigned int _field8;
    int _field9;
    int _field10;
};

struct FullReportUploadObserver {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct GifDecoder;

struct GifExtInfo {
    int _field1;
    int _field2;
    int _field3;
};

struct GifFrameRect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct IMVQQEngine {
    struct CMVQQEngine *_field1;
};

struct ISpeedTestChannel {
    struct CSpeedTestChannel *mSpeedTestChannel;
};

struct ITransportChannel {
    struct CTransportChannel *_field1;
};

struct LogUploadObserver {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
};

struct MMCGIItem {
    int _field1;
    int _field2;
    int _field3;
    char *_field4;
    char *_field5;
    Class _field6;
    int _field7;
    int _field8;
    int _field9;
};

struct MxGifImage {
    struct GifDecoder *_field1;
    int _field2;
    struct _MxImage *_field3;
    struct _MxImage *_field4;
    int _field5;
    struct GifExtInfo _field6;
    int _field7;
    struct GifFrameRect _field8;
    unsigned long long _field9;
    int _field10;
    struct vector<GifExtInfo, std::__1::allocator<GifExtInfo>> _field11;
    _Bool _field12;
};

struct NSDictionary {
    Class _field1;
};

struct NSEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct NSObject {
    Class _field1;
};

struct NewAVExtReport_t {
    unsigned int _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct NewDialReport_t {
    unsigned int _field1;
    unsigned int _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    char _field23[256];
    char _field24[256];
    char _field25[256];
    char _field26[256];
    unsigned int _field27;
    unsigned int _field28;
    unsigned long long _field29;
    unsigned long long _field30;
    unsigned long long _field31;
    int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    int _field36;
    int _field37;
    char _field38[256];
    char _field39[256];
    unsigned long long _field40;
    unsigned long long _field41;
};

struct NewDirectReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
};

struct NewRelayReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    unsigned int _field54;
    unsigned int _field55;
};

struct PBClassInfo {
    unsigned int _field1;
    char **_field2;
    unsigned long long *_field3;
    unsigned long long *_field4;
    CDStruct_183601bc *_field5;
};

struct PBEncodeItem;

struct RelayTcpReport {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
};

struct Task {
    unsigned int _field1;
    unsigned int _field2;
    unsigned long long _field3;
    int _field4;
    basic_string_805fe43b _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    void *_field16;
    basic_string_805fe43b _field17;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field18;
};

struct VOIPChannelAdapter {
    CDUnknownFunctionPointerType *_field1;
};

struct VOIPNetNotifier {
    CDUnknownFunctionPointerType *_field1;
};

struct VOIPSpeedTestChannelAdapter {
    CDUnknownFunctionPointerType *_field1;
};

struct VoIPRingBuffer {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
    struct _VoIPRingBufferElement *_field5;
    struct _opaque_pthread_mutex_t *_field6;
    int _field7;
};

struct WCTAnyProperty {
    basic_string_805fe43b _field1;
    Class _field2;
};

struct WCTBinding {
    Class _field1;
    struct map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>, WCDB::CaseInsensiveComparetor, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>>> _field2;
    struct list<std::__1::shared_ptr<WCTColumnBinding>, std::__1::allocator<std::__1::shared_ptr<WCTColumnBinding>>> _field3;
    struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>>> _field4;
    struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>>> _field5;
    struct shared_ptr<std::__1::list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>>> _field6;
    struct shared_ptr<std::__1::list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>> _field7;
};

struct WCTColumnBinding;

struct WCTProperty {
    basic_string_805fe43b _field1;
    Class _field2;
    struct shared_ptr<WCTColumnBinding> _field3;
};

struct XmlReaderAttr_t;

struct XmlReaderNode_t {
    int _field1;
    char *_field2;
    struct XmlReaderNode_t *_field3;
    struct XmlReaderNode_t *_field4;
    struct XmlReaderNode_t *_field5;
    struct XmlReaderNode_t **_field6;
    struct XmlReaderAttr_t *_field7;
    struct XmlReaderAttr_t **_field8;
    int _field9;
};

struct _MxImage;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _SpeedTestInfo {
    int roomId;
    unsigned long long roomKey;
    unsigned int callType;
    unsigned int isConnecting;
    unsigned int isConnected;
    unsigned int c2Clossrate;
    unsigned int c2CrttCnt;
    NSMutableArray *c2Crtt;
    unsigned int c2SdownLossRate;
    unsigned int c2SrttCnt;
    NSMutableArray *c2Srtt;
    unsigned int sendPkts;
    unsigned int rcvPkts;
};

struct _VoIPRingBufferElement;

struct __CFString;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*> *__next_;
};

struct __list_node_base<const WCDB::Order, void *> {
    struct __list_node_base<const WCDB::Order, void *> *_field1;
    struct __list_node_base<const WCDB::Order, void *> *_field2;
};

struct __list_node_base<const WCTProperty, void *> {
    struct __list_node_base<const WCTProperty, void *> *_field1;
    struct __list_node_base<const WCTProperty, void *> *_field2;
};

struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> {
    struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> *_field1;
    struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> *_field2;
};

struct __shared_weak_count;

struct __siginfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    int _field6;
    void *_field7;
    union sigval _field8;
    long long _field9;
    unsigned long long _field10[7];
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct _mmaop_arg {
    char *_field1;
    char *_field2;
};

struct _mmaop_info {
    CDUnknownFunctionPointerType _field1;
    CDUnknownBlockType _field2;
    CDUnknownBlockType _field3;
    struct _mmaop_arg _field4[11];
    char _field5;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct _xtrace_arg {
    char *_field1;
    char *_field2;
    int _field3;
};

struct _xtrace_info {
    int _field1;
    void *_field2;
    void *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownBlockType _field8;
    CDUnknownBlockType _field9;
    struct objc_method *_field10;
    char *_field11;
    char *_field12;
    char *_field13;
    struct _xtrace_arg _field14[11];
    struct _stats {
        double _field1;
        double _field2;
        unsigned int _field3;
    } _field15;
    char _field16;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct dl_info {
    char *_field1;
    void *_field2;
    char *_field3;
    void *_field4;
};

struct in_addr {
    unsigned int _field1;
};

struct list<const WCDB::Order, std::__1::allocator<const WCDB::Order>> {
    struct __list_node_base<const WCDB::Order, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCDB::Order, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<const WCTProperty, std::__1::allocator<const WCTProperty>> {
    struct __list_node_base<const WCTProperty, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCTProperty, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>;

struct list<std::__1::shared_ptr<WCTColumnBinding>, std::__1::allocator<std::__1::shared_ptr<WCTColumnBinding>>> {
    struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<WCTColumnBinding>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>>;

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>, WCDB::CaseInsensiveComparetor, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, WCDB::CaseInsensiveComparetor, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, WCDB::CaseInsensiveComparetor, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long long, tagEmojiItem *, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, tagEmojiItem *>>> {
    struct __tree<std::__1::__value_type<unsigned long long, tagEmojiItem *>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, tagEmojiItem *>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, tagEmojiItem *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, tagEmojiItem *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, tagEmojiItem *>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct objc_method;

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<WCTColumnBinding> {
    struct WCTColumnBinding *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>> {
    struct list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>>> {
    struct list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>>> {
    struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>>> {
    struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct tagAVQualityReportInfo {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned short _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    unsigned short _field19;
    unsigned short _field20;
    unsigned short _field21;
    unsigned short _field22;
    unsigned short _field23;
    unsigned short _field24;
    unsigned short _field25;
    unsigned short _field26;
    unsigned short _field27;
    unsigned short _field28;
    unsigned short _field29;
    unsigned short _field30;
    unsigned short _field31;
    unsigned short _field32;
    unsigned short _field33;
    unsigned short _field34;
    unsigned short _field35;
    unsigned short _field36;
    unsigned short _field37;
    unsigned short _field38;
    unsigned short _field39;
    unsigned short _field40;
    unsigned short _field41;
    unsigned short _field42;
    unsigned short _field43;
    unsigned short _field44;
    unsigned short _field45;
    unsigned short _field46;
    unsigned short _field47;
    unsigned short _field48;
    unsigned short _field49;
    unsigned short _field50;
    unsigned short _field51;
    unsigned short _field52;
    unsigned short _field53;
    unsigned short _field54;
    unsigned short _field55;
    unsigned short _field56;
    unsigned short _field57;
    unsigned short _field58;
    unsigned short _field59;
    unsigned short _field60;
    unsigned short _field61;
    unsigned short _field62;
    unsigned short _field63;
    unsigned short _field64;
    unsigned short _field65;
    unsigned short _field66;
    unsigned short _field67;
    unsigned short _field68;
    unsigned short _field69;
    unsigned short _field70;
    unsigned short _field71;
    unsigned short _field72;
    unsigned short _field73;
    unsigned short _field74;
    unsigned short _field75;
    unsigned short _field76;
    unsigned short _field77;
    unsigned short _field78;
    unsigned short _field79;
    unsigned short _field80;
    unsigned short _field81;
    unsigned char _field82;
    unsigned char _field83;
    unsigned char _field84;
    unsigned int _field85;
    unsigned int _field86;
    unsigned short _field87;
    unsigned short _field88;
    unsigned short _field89;
    unsigned char _field90;
    unsigned char _field91;
    unsigned char _field92;
    unsigned char _field93;
    unsigned char _field94;
    unsigned int _field95;
    unsigned int _field96;
    unsigned char _field97;
    unsigned char _field98;
    unsigned char _field99;
    int _field100;
    int _field101;
    int _field102;
    unsigned int _field103;
    unsigned short _field104;
    unsigned short _field105;
    unsigned short _field106;
    unsigned char _field107;
    unsigned char _field108;
    unsigned int _field109;
    unsigned int _field110;
    unsigned int _field111;
    unsigned int _field112;
    unsigned int _field113;
    unsigned char _field114;
    unsigned char _field115;
    unsigned short _field116;
    unsigned short _field117;
    unsigned short _field118;
    unsigned short _field119;
    unsigned short _field120;
    unsigned short _field121;
    unsigned short _field122;
    unsigned short _field123;
    unsigned short _field124;
    unsigned short _field125;
    unsigned short _field126;
    unsigned short _field127;
    unsigned short _field128;
    unsigned short _field129;
    unsigned char _field130;
    unsigned char _field131;
    unsigned char _field132;
    unsigned char _field133;
    unsigned char _field134;
    unsigned short _field135;
    unsigned short _field136;
    unsigned short _field137;
    unsigned short _field138;
    unsigned short _field139;
    unsigned short _field140;
    unsigned short _field141;
    unsigned short _field142;
    unsigned short _field143;
    unsigned short _field144;
    unsigned short _field145;
    unsigned short _field146;
    unsigned short _field147;
    unsigned short _field148;
    unsigned short _field149;
    unsigned short _field150;
    unsigned short _field151;
    unsigned short _field152;
    unsigned short _field153;
    unsigned short _field154;
    unsigned short _field155;
    unsigned short _field156;
    unsigned short _field157;
    unsigned short _field158;
    unsigned short _field159;
    unsigned short _field160;
    unsigned short _field161;
    unsigned short _field162;
    unsigned short _field163;
    unsigned short _field164;
    unsigned short _field165;
    unsigned short _field166;
    unsigned int _field167;
    unsigned int _field168;
    unsigned int _field169;
    unsigned int _field170;
    unsigned int _field171;
    unsigned int _field172;
    unsigned int _field173;
    unsigned int _field174;
    unsigned int _field175;
    unsigned int _field176;
    unsigned char _field177;
    unsigned char _field178;
    unsigned char _field179;
    unsigned char _field180;
    unsigned char _field181;
    int _field182;
    unsigned int _field183;
    unsigned int _field184;
    unsigned int _field185;
    int _field186;
    unsigned short _field187;
    unsigned short _field188;
    unsigned short _field189;
    unsigned short _field190;
    unsigned short _field191;
    unsigned short _field192;
    unsigned short _field193;
    unsigned int _field194;
    unsigned int _field195;
    unsigned short _field196;
    unsigned short _field197;
    unsigned short _field198;
    unsigned short _field199;
    unsigned short _field200;
    unsigned short _field201;
    unsigned short _field202;
    unsigned short _field203;
    unsigned int _field204;
    unsigned int _field205;
    unsigned int _field206;
    unsigned int _field207;
    unsigned int _field208;
    unsigned int _field209;
    unsigned int _field210;
    unsigned int _field211;
    unsigned int _field212;
    unsigned int _field213;
    unsigned int _field214;
    unsigned int _field215;
    unsigned int _field216;
    unsigned int _field217;
    unsigned int _field218;
    unsigned int _field219;
    unsigned int _field220;
    unsigned int _field221;
    unsigned int _field222;
    unsigned int _field223;
    unsigned int _field224;
    unsigned int _field225;
    unsigned int _field226;
    unsigned int _field227;
    unsigned int _field228;
    unsigned int _field229;
    unsigned int _field230;
    unsigned int _field231;
    unsigned int _field232;
    int _field233;
    int _field234;
    unsigned int _field235;
    unsigned int _field236;
    int _field237;
    int _field238;
    int _field239;
    int _field240;
    int _field241;
    int _field242;
    int _field243;
    int _field244;
    unsigned short _field245;
    unsigned short _field246;
    unsigned short _field247;
    unsigned short _field248;
    unsigned short _field249;
    unsigned short _field250;
    unsigned short _field251;
    unsigned short _field252;
    unsigned char _field253;
    unsigned char _field254;
    unsigned char _field255;
    unsigned char _field256;
    int _field257;
    int _field258;
    int _field259;
    int _field260;
    int _field261;
    int _field262;
    int _field263;
    int _field264;
    int _field265;
    int _field266;
    unsigned int _field267;
    unsigned int _field268;
    unsigned int _field269;
    unsigned int _field270;
    unsigned int _field271;
    unsigned int _field272;
    unsigned int _field273;
    unsigned int _field274;
    unsigned int _field275;
    unsigned short _field276;
    unsigned short _field277;
    unsigned int _field278;
    unsigned int _field279;
    unsigned int _field280;
    unsigned int _field281;
    unsigned int _field282;
    unsigned int _field283;
    long long _field284;
    unsigned short _field285;
    struct tagVHWEngineReport _field286;
    struct tagVCodec2EngineReport _field287;
    int _field288;
    int _field289;
    unsigned short _field290;
    unsigned short _field291;
    unsigned short _field292;
    unsigned int _field293;
    unsigned int _field294;
    int _field295;
    unsigned int _field296;
};

struct tagDirectReport {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned short _field19;
    unsigned short _field20;
    unsigned short _field21;
    unsigned short _field22;
    unsigned short _field23;
    unsigned short _field24;
    unsigned short _field25;
    unsigned short _field26;
    unsigned short _field27;
    unsigned short _field28;
    unsigned short _field29;
    unsigned short _field30;
    unsigned short _field31;
    unsigned short _field32;
    unsigned short _field33;
    unsigned short _field34;
    unsigned short _field35;
    unsigned short _field36;
    unsigned short _field37;
    unsigned short _field38;
    unsigned short _field39;
    unsigned char _field40;
    unsigned char _field41;
    unsigned char _field42;
};

struct tagRelayReport {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned long long _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned short _field21;
    unsigned short _field22;
    unsigned short _field23;
    unsigned short _field24;
    unsigned short _field25;
    unsigned short _field26;
    unsigned short _field27;
    unsigned short _field28;
    unsigned short _field29;
    unsigned short _field30;
    unsigned short _field31;
    unsigned short _field32;
    unsigned short _field33;
    unsigned short _field34;
    unsigned short _field35;
    unsigned short _field36;
    unsigned short _field37;
    unsigned short _field38;
    unsigned short _field39;
    unsigned short _field40;
    unsigned int _field41;
    unsigned char _field42;
    unsigned char _field43;
};

struct tagVCodec2EngineReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
};

struct tagVHWEngineReport {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned char _field6;
    unsigned char _field7;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<int, const MMCGIItem *, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, const MMCGIItem *>>> {
    struct __hash_table<std::__1::__hash_value_type<int, const MMCGIItem *>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, const MMCGIItem *>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, const MMCGIItem *>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, const MMCGIItem *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, const MMCGIItem *>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, const MMCGIItem *>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, const MMCGIItem *>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, const WCDBBackupMediaStr2IDObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, const WCDBBackupMediaStr2IDObject *>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, std::__1::hash<long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>>;

struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>>;

struct unordered_map<unsigned int, MMCGI *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, MMCGI *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, MMCGI *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, MMCGI *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, MMCGI *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, MMCGI *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MMCGI *>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, MMCGI *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, MMCGI *>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, id, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, id>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, id>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, id>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, id>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, id>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, id>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, id>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, id>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::equal_to<unsigned long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct uregex;

struct vector<GifExtInfo, std::__1::allocator<GifExtInfo>> {
    struct GifExtInfo *_field1;
    struct GifExtInfo *_field2;
    struct __compressed_pair<GifExtInfo *, std::__1::allocator<GifExtInfo>> {
        struct GifExtInfo *_field1;
    } _field3;
};

struct vector<PBEncodeItem, std::__1::allocator<PBEncodeItem>> {
    struct PBEncodeItem *_field1;
    struct PBEncodeItem *_field2;
    struct __compressed_pair<PBEncodeItem *, std::__1::allocator<PBEncodeItem>> {
        struct PBEncodeItem *_field1;
    } _field3;
};

struct vector<objc_method_description, std::__1::allocator<objc_method_description>> {
    struct objc_method_description *_field1;
    struct objc_method_description *_field2;
    struct __compressed_pair<objc_method_description *, std::__1::allocator<objc_method_description>> {
        struct objc_method_description *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_805fe43b *__begin_;
    basic_string_805fe43b *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_805fe43b *__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    SEL _field1;
    SEL _field2;
    SEL _field3;
} CDStruct_0348af7d;

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
    short _field10;
    short _field11;
    short _field12;
    short _field13;
} CDStruct_33d8b17a;

typedef struct CDStruct_183601bc;

typedef struct {
    struct CGPoint _field1;
} CDStruct_499be82c;

typedef struct {
    long long _field1;
    struct CGRect _field2;
    long long _field3;
} CDStruct_4b25f01b;

// Template types
typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_805fe43b;

typedef struct list<const WCDB::Order, std::__1::allocator<const WCDB::Order>> {
    struct __list_node_base<const WCDB::Order, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCDB::Order, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_02de7622;

typedef struct list<const WCTProperty, std::__1::allocator<const WCTProperty>> {
    struct __list_node_base<const WCTProperty, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCTProperty, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_2812bee2;

typedef struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_24f1cf24;

typedef struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_531c353a;

typedef struct vector<objc_method_description, std::__1::allocator<objc_method_description>> {
    struct objc_method_description *_field1;
    struct objc_method_description *_field2;
    struct __compressed_pair<objc_method_description *, std::__1::allocator<objc_method_description>> {
        struct objc_method_description *_field1;
    } _field3;
} vector_71df529e;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
} vector_a9c0768e;

#pragma mark Named Unions

union sigval {
    int _field1;
    void *_field2;
};

