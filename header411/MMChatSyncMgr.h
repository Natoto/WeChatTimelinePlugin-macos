//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MMService.h"

#import "AccountServiceExt.h"
#import "BakChatMsgDownloadTaskDelegate.h"
#import "IMessageExt.h"
#import "MMService.h"
#import "SyncExt.h"

@class FIFOQueue, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSRecursiveLock, NSString;

@interface MMChatSyncMgr : MMService <IMessageExt, BakChatMsgDownloadTaskDelegate, SyncExt, AccountServiceExt, MMService>
{
    FIFOQueue *m_downloadQueue;
    NSMutableDictionary *m_dictDownloadTask;
    NSRecursiveLock *m_oLockForDictDownloadTask;
    NSMutableDictionary *m_dictFilteredSession;
    NSRecursiveLock *m_oLockForDictFilteredSession;
    NSObject<OS_dispatch_queue> *m_serialQueue;
    BOOL isSerialQueueSuspended;
    NSRecursiveLock *m_oLockForSerialQueue;
    BOOL isNeedCloseSync;
    BOOL m_bDidSyncSessionOrder;
    unsigned long long m_ulChatSyncStarttimeInMs;
    unsigned int m_uChatSyncTimeCostInMs;
    BOOL m_bDidGetNewXml;
    BOOL m_bDidReceiveData;
    BOOL m_bDidSyncFinish;
    int m_syncFailReason;
    BOOL m_bDidReport;
}

+ (void)LazyRegisterExtension;
- (void).cxx_destruct;
- (int)authorDeviceType;
- (void)onUserLogout;
- (void)onSyncFinishWithStatus:(unsigned int)arg1 withOnlineVersion:(unsigned int)arg2;
- (void)onInitFail;
- (void)onInitFinish;
- (void)onBakChatMsgDownloadFinishWithMsgData:(id)arg1 isSuccess:(BOOL)arg2;
- (id)_parseChatSyncMsg:(id)arg1;
- (BOOL)isInDownloadingQueue:(id)arg1;
- (void)checkDownloadQueue;
- (void)onRecvChatSyncMsg:(id)arg1;
- (void)syncSessionOrderIfNeed:(id)arg1;
- (void)setFilteredSession:(id)arg1;
- (unsigned int)chatsSyncTimeout;
- (BOOL)useTimeMerge;
- (unsigned int)syncMsgTimeMaxDiff;
- (id)mergeAlgorithm;
- (BOOL)shouldOpenChatsSync;
- (void)doReport;
- (void)onServiceClearData;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

